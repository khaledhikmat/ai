version: '3.8'

services:
  neo4j:
    image: neo4j:5.15
    container_name: ai-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/admin4neo4j
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - ai-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7474 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  mcp-server:
    build: .
    container_name: ai-mcp-server
    ports:
      - "8000:8000"
    environment:
      # Neo4j connection
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=admin4neo4j
      
      # MCP server configuration
      - MCP_TYPE=security
      
      # GitLab configuration (if needed)
      - GITLAB_TOKEN=${GITLAB_TOKEN:-}
      - GITLAB_BASE_URL=${GITLAB_BASE_URL:-}
      - GITLAB_SLUG=${GITLAB_SLUG:-}
      
      # Other service configurations
      - REPO_TYPE=${REPO_TYPE:-github}
      - REPO_URLS=${REPO_URLS:-}
      
      # LLM configuration (if needed for future features)
      - LLM_PROVIDER=${LLM_PROVIDER:-openai}
      - LLM_API_KEY=${LLM_API_KEY:-}
      - LLM_CHOICE=${LLM_CHOICE:-gpt-4o-mini}
      
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:

networks:
  ai-network:
    driver: bridge